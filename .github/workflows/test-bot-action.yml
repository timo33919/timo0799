name: auto action deps

on:
  workflow_dispatch:
    inputs:
      task:
        description: 'Task to run'
        required: true
        type: choice
        options:
          - dep1
          - dep2

      branch:
        description: 'Branch to run on'
        required: true
        default: 'main'
        type: string

jobs:
  determine-task:
    runs-on: ubuntu-latest
    outputs:
      task: ${{ steps.task-check.outputs.task }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine task
        id: task-check
        run: |
          if [ "${{ github.event.inputs.task }}" == "dep1" ]; then
            echo "task=dep1" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.task }}" == "dep2" ]; then
            echo "task=dep2" >> $GITHUB_OUTPUT
          else
            echo "Unknown task"
            exit 1
          fi

  Upload-to-OSS:
    needs: determine-task
    if: ${{ needs.determine-task.outputs.task == 'dep1' }}
    #if: ${{ github.event_name == 'push' || github.event.inputs.selected_jobs  == 'Increment-upload' || github.event.inputs.selected_jobs == 'Full-upload' }}
    runs-on: [ self-hosted, yyk ]
    #runs-on: [ self-hosted, upload, sg, pp-game, runner-1, prod ]
    env:
      PROJECT: prod_sg
      ID_FILE: "/home/ecs-user/.cp-game_commit_id.txt"
      OSS_ACCESS_KEY_ID: ${{ secrets.PRE_OSS_AK_YYK }}
      OSS_ACCESS_KEY_SECRET: ${{ secrets.PRE_OSS_SK_YYK }}
      OSS_ENDPOINT: ${{ secrets.PRE_US_OSS_ENDPOINT_YYK }}


    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 20  # 拉取最近 20 次提交

      # 2. 检查上次的 commit ID
      - name: Get Last commit ID
        run: |
          BRANCH=`git branch --show-current`
          COMMIT_ID=$(grep ^$PROJECT  $ID_FILE |awk '{print $2}')
          if [ -z "$COMMIT_ID" ]; then
            echo "Error Commit ID. Exiting..."
            echo "Please Check $ID_FILE,  Example:"
            echo "<project_name> <last_commit_id> "
            exit 1
          else
            echo "last commit_id: $COMMIT_ID"
          fi

      # 3. 上传构建文件到阿里云 OSS
      - name: Upload to Alibaba Cloud OSS
        run: |
          pwd
          set -e

          if [ "${{ github.event.inputs.selected_jobs }}" == "Full-upload" ]; then
            LOCAL_PATH=("./build/games/game/")
            BUCKET_PATH=("oss://pp-game-prod-sg/")


          else
            COMMIT_ID=$(grep ^$PROJECT  $ID_FILE |awk '{print $2}')
            REPO=`basename $(git rev-parse --show-toplevel)`_$PROJECT
            LOCAL_PATH=("/tmp/$REPO/build/games/game/")
            BUCKET_PATH=("oss://pp-game-prod-sg/")

            for m in "${LOCAL_PATH[@]}"; do
              mkdir -p "$m"
            done

            # 获取git diff 的文件列表
            echo -e "\n\n######   Git diff files list    #####"
            for i in `git diff --name-only $COMMIT_ID HEAD |grep ^build`
            do
              if [  -e "$i" ]; then
                echo "######   Git update file: $i    #####"
                rsync -R $i /tmp/$REPO/
              else
                continue
              fi
            done
          fi

          for i in "${!LOCAL_PATH[@]}"; do
            echo -e "\n\n######    ossutil: cp -r ${LOCAL_PATH[i]} ${BUCKET_PATH[i]}      ######"
            echo "######    upload file    ######"
            ossutil \
              --access-key-id $OSS_ACCESS_KEY_ID \
              --access-key-secret $OSS_ACCESS_KEY_SECRET \
              --endpoint $OSS_ENDPOINT \
              --exclude "*.html" \
              --force \
            cp -r ${LOCAL_PATH[i]} ${BUCKET_PATH[i]}  #将目录同步到 OSS

            echo "#####    upload *.html    #####"
            ossutil \
              --access-key-id $OSS_ACCESS_KEY_ID \
              --access-key-secret $OSS_ACCESS_KEY_SECRET \
              --endpoint $OSS_ENDPOINT \
              --include "*.html" \
              --meta Cache-Control:no-cache \
              --force \
            cp -r ${LOCAL_PATH[i]} ${BUCKET_PATH[i]}   #将目录同步到 OSS
          done

          if [ "${{ github.event.inputs.selected_jobs }}" != "Full-upload" ]; then
            rm -rf /tmp/$REPO
          fi

      # 4. 保存 commit ID
      - name: Save Commit ID to file
        run: |
          HEAD_ID=`git rev-parse HEAD`
          sed -i "s/^$PROJECT .*/$PROJECT $HEAD_ID/" $ID_FILE

      # 5. Purge Cache
      - name: Purge Cache
        env:
          CACHE_TOKEN1: ${{ secrets.PROD_SG_CACHE_TOKEN }}
        run: |
          #x-q-2-k.com    (prod 8899happyfish account)
          curl --location 'https://api.cloudflare.com/client/v4/zones/52c9565ba9906fa8b2276751873c2dbe/purge_cache' \
          --header 'Content-Type: application/json' \
          --header "Authorization: Bearer $CACHE_TOKEN1" \
          --data '{
              "purge_everything": true
          }'
